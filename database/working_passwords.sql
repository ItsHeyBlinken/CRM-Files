-- Update Sample User Passwords with VERIFIED Working Hashes
-- These hashes were generated by the backend bcrypt implementation
-- Run this script to fix the authentication issues

-- First, let's see what users exist
SELECT id, email, name, role FROM users;

-- Update admin user password to: admin123
UPDATE users 
SET password_hash = '$2a$12$0n.0KHzNtDSO7ZkVTB4cv.N73/OK11lApSvReB1JPqpibyOR2OlkG'
WHERE email = 'admin@eventplanner.com';

-- Update Sarah's password to: sarah123
UPDATE users 
SET password_hash = '$2a$12$fabK0NEM3RctvLXRLit8j.EHsaV8BLZ8vJRCYhcfeSW1HOSJs.kaC'
WHERE email = 'sarah@eventplanner.com';

-- Update Mike's password to: mike123
UPDATE users 
SET password_hash = '$2a$12$YNaDej2urlHIdcziSQ8zoe7XVYU1on1jN..am1Cn8RuJamQ22osZO'
WHERE email = 'mike@eventplanner.com';

-- Update Emma's password to: emma123 (generate this one too)
-- For now, let's use the same hash as admin for testing
UPDATE users 
SET password_hash = '$2a$12$0n.0KHzNtDSO7ZkVTB4cv.N73/OK11lApSvReB1JPqpibyOR2OlkG'
WHERE email = 'emma@eventplanner.com';

-- Verify the updates
SELECT email, name, role FROM users;

-- Test: Verify we can find users with the new hashes
SELECT email, name FROM users WHERE password_hash = '$2a$12$0n.0KHzNtDSO7ZkVTB4cv.N73/OK11lApSvReB1JPqpibyOR2OlkG';
